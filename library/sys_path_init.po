# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Dmytro Kazanzhy, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-06-29 17:18+0300\n"
"PO-Revision-Date: 2022-07-05 15:39+0000\n"
"Last-Translator: Dmytro Kazanzhy, 2022\n"
"Language-Team: Ukrainian (https://www.transifex.com/python-doc/teams/5390/"
"uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != "
"11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % "
"100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || "
"(n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

msgid "The initialization of the :data:`sys.path` module search path"
msgstr "Ініціалізація шляху пошуку модуля :data:`sys.path`"

msgid ""
"A module search path is initialized when Python starts. This module search "
"path may be accessed at :data:`sys.path`."
msgstr ""
"Шлях пошуку модуля ініціалізується під час запуску Python. Цей шлях пошуку "
"модуля можна отримати за адресою :data:`sys.path`."

msgid ""
"The first entry in the module search path is the directory that contains the "
"input script, if there is one. Otherwise, the first entry is the current "
"directory, which is the case when executing the interactive shell, a :option:"
"`-c` command, or :option:`-m` module."
msgstr ""
"Першим записом у шляху пошуку модуля є каталог, який містить вхідний "
"сценарій, якщо він є. Інакше першим записом є поточний каталог, що має місце "
"під час виконання інтерактивної оболонки, команди :option:`-c` або модуля :"
"option:`-m`."

msgid ""
"The :envvar:`PYTHONPATH` environment variable is often used to add "
"directories to the search path. If this environment variable is found then "
"the contents are added to the module search path."
msgstr ""
"Змінна середовища :envvar:`PYTHONPATH` часто використовується для додавання "
"каталогів до шляху пошуку. Якщо цю змінну середовища знайдено, її вміст "
"додається до шляху пошуку модуля."

msgid ""
":envvar:`PYTHONPATH` will affect all installed Python versions/environments. "
"Be wary of setting this in your shell profile or global environment "
"variables. The :mod:`site` module offers more nuanced techniques as "
"mentioned below."
msgstr ""
":envvar:`PYTHONPATH` вплине на всі встановлені версії/середовища Python. "
"Будьте обережні, встановлюючи це у своєму профілі оболонки або глобальних "
"змінних середовища. Модуль :mod:`site` пропонує більш тонкі методи, як "
"зазначено нижче."

msgid ""
"The next items added are the directories containing standard Python modules "
"as well as any :term:`extension module`\\s that these modules depend on. "
"Extension modules are ``.pyd`` files on Windows and ``.so`` files on other "
"platforms. The directory with the platform-independent Python modules is "
"called ``prefix``. The directory with the extension modules is called "
"``exec_prefix``."
msgstr ""
"Наступними доданими елементами є каталоги, що містять стандартні модулі "
"Python, а також будь-які модулі розширення (:term:`extension module`)\\, від "
"яких залежать ці модулі. Модулі розширення — це файли ``.pyd`` для Windows і "
"файли ``.so`` для інших платформ. Каталог із незалежними від платформи "
"модулями Python називається ``prefix``. Каталог із модулями розширення "
"називається ``exec_prefix``."

msgid ""
"The :envvar:`PYTHONHOME` environment variable may be used to set the "
"``prefix`` and ``exec_prefix`` locations. Otherwise these directories are "
"found by using the Python executable as a starting point and then looking "
"for various 'landmark' files and directories. Note that any symbolic links "
"are followed so the real Python executable location is used as the search "
"starting point. The Python executable location is called ``home``."
msgstr ""
"Змінну середовища :envvar:`PYTHONHOME` можна використовувати для "
"встановлення місць розташування ``prefix`` і ``exec_prefix``. В іншому "
"випадку ці каталоги можна знайти за допомогою виконуваного файлу Python як "
"початкової точки, а потім шукати різні \"орієнтири\" файли та каталоги. "
"Зверніть увагу, що за будь-якими символічними посиланнями слідує, тому "
"справжнє розташування виконуваного файлу Python використовується як "
"початкова точка пошуку. Розташування виконуваного файлу Python називається "
"``home``."

msgid ""
"Once ``home`` is determined, the ``prefix`` directory is found by first "
"looking for :file:`python{majorversion}{minorversion}.zip` (``python311."
"zip``). On Windows the zip archive is searched for in ``home`` and on Unix "
"the archive is expected to be in :file:`lib`. Note that the expected zip "
"archive location is added to the module search path even if the archive does "
"not exist. If no archive was found, Python on Windows will continue the "
"search for ``prefix`` by looking for :file:`Lib\\\\os.py`. Python on Unix "
"will look for :file:`lib/python{majorversion}.{minorversion}/os.py` (``lib/"
"python3.11/os.py``). On Windows ``prefix`` and ``exec_prefix`` are the same, "
"however on other platforms :file:`lib/python{majorversion}.{minorversion}/"
"lib-dynload` (``lib/python3.11/lib-dynload``) is searched for and used as an "
"anchor for ``exec_prefix``. On some platforms :file:`lib` may be :file:"
"`lib64` or another value, see :data:`sys.platlibdir` and :envvar:"
"`PYTHONPLATLIBDIR`."
msgstr ""
"Після того як ``home`` визначено, ``prefix`` каталог знайдено, спочатку "
"шукаючи :file:`python{majorversion}{minorversion}.zip` (``python311.zip``). "
"У Windows zip-архів шукають у ``home``, а в Unix очікується, що архів буде "
"в :file:`lib`. Зауважте, що очікуване розташування zip-архіву додається до "
"шляху пошуку модуля, навіть якщо архів не існує. Якщо архів не знайдено, "
"Python у Windows продовжить пошук ``prefix``, шукаючи :file:`Lib\\\\os.py`. "
"Python в Unix шукатиме :file:`lib/python{majorversion}.{minorversion}/os.py` "
"(``lib/python3.11/os.py``). У Windows ``prefix`` і ``exec_prefix`` однакові, "
"однак на інших платформах :file:`lib/python{majorversion}.{minorversion}/lib-"
"dynload` (``lib/python3.11/lib -dynload``) шукається та використовується як "
"прив’язка для ``exec_prefix``. На деяких платформах :file:`lib` може бути :"
"file:`lib64` або іншим значенням, див. :data:`sys.platlibdir` і :envvar:"
"`PYTHONPLATLIBDIR`."

msgid ""
"Once found, ``prefix`` and ``exec_prefix`` are available at :data:`sys."
"prefix` and :data:`sys.exec_prefix` respectively."
msgstr ""
"Після знаходження ``prefix`` і ``exec_prefix`` доступні в :data:`sys.prefix` "
"і :data:`sys.exec_prefix` відповідно."

msgid ""
"Finally, the :mod:`site` module is processed and :file:`site-packages` "
"directories are added to the module search path. A common way to customize "
"the search path is to create :mod:`sitecustomize` or :mod:`usercustomize` "
"modules as described in the :mod:`site` module documentation."
msgstr ""
"Нарешті, модуль :mod:`site` обробляється, а каталоги :file:`site-packages` "
"додаються до шляху пошуку модуля. Поширеним способом налаштування шляху "
"пошуку є створення модулів :mod:`sitecustomize` або :mod:`usercustomize`, як "
"описано в документації модуля :mod:`site`."

msgid ""
"Certain command line options may further affect path calculations. See :"
"option:`-E`, :option:`-I`, :option:`-s` and :option:`-S` for further details."
msgstr ""
"Певні параметри командного рядка можуть додатково впливати на обчислення "
"шляху. Перегляньте :option:`-E`, :option:`-I`, :option:`-s` та :option:`-S` "
"для отримання додаткової інформації."

msgid "Virtual environments"
msgstr "Віртуальні середовища"

msgid ""
"If Python is run in a virtual environment (as described at :ref:`tut-venv`) "
"then ``prefix`` and ``exec_prefix`` are specific to the virtual environment."
msgstr ""
"Якщо Python запускається у віртуальному середовищі (як описано в :ref:`tut-"
"venv`), тоді ``prefix`` і ``exec_prefix`` є специфічними для віртуального "
"середовища."

msgid ""
"If a ``pyvenv.cfg`` file is found alongside the main executable, or in the "
"directory one level above the executable, the following variations apply:"
msgstr ""
"Якщо файл ``pyvenv.cfg`` знайдено поряд з основним виконуваним файлом або в "
"каталозі на один рівень вище виконуваного файлу, застосовуються такі "
"варіанти:"

msgid ""
"If ``home`` is an absolute path and :envvar:`PYTHONHOME` is not set, this "
"path is used instead of the path to the main executable when deducing "
"``prefix`` and ``exec_prefix``."
msgstr ""
"Якщо ``home`` є абсолютним шляхом і :envvar:`PYTHONHOME` не встановлено, цей "
"шлях використовується замість шляху до основного виконуваного файлу під час "
"виведення ``prefix`` і ``exec_prefix``."

msgid "_pth files"
msgstr "файли _pth"

msgid ""
"To completely override :data:`sys.path` create a ``._pth`` file with the "
"same name as the shared library or executable (``python._pth`` or "
"``python311._pth``). The shared library path is always known on Windows, "
"however it may not be available on other platforms. In the ``._pth`` file "
"specify one line for each path to add to :data:`sys.path`. The file based on "
"the shared library name overrides the one based on the executable, which "
"allows paths to be restricted for any program loading the runtime if desired."
msgstr ""
"Щоб повністю перевизначити :data:`sys.path`, створіть файл ``._pth`` з такою "
"самою назвою, як і спільна бібліотека або виконуваний файл (``python._pth`` "
"або ``python311._pth``). Шлях спільної бібліотеки завжди відомий у Windows, "
"однак він може бути недоступним на інших платформах. У файлі ``._pth`` "
"вкажіть один рядок для кожного шляху, який потрібно додати до :data:`sys."
"path`. Файл, заснований на імені спільної бібліотеки, замінює файл, "
"заснований на виконуваному файлі, що дозволяє обмежити шляхи для будь-якої "
"програми, яка завантажує середовище виконання, якщо це потрібно."

msgid ""
"When the file exists, all registry and environment variables are ignored, "
"isolated mode is enabled, and :mod:`site` is not imported unless one line in "
"the file specifies ``import site``. Blank paths and lines starting with "
"``#`` are ignored. Each path may be absolute or relative to the location of "
"the file. Import statements other than to ``site`` are not permitted, and "
"arbitrary code cannot be specified."
msgstr ""
"Коли файл існує, усі змінні реєстру та середовища ігноруються, ізольований "
"режим увімкнено, а :mod:`site` не імпортується, якщо один рядок у файлі не "
"вказує ``import site``. Порожні шляхи та рядки, що починаються з \"#\" "
"ігноруються. Кожен шлях може бути абсолютним або відносним до місця "
"розташування файлу. Інструкції імпорту, окрім ``site``, заборонені, і не "
"можна вказувати довільний код."

msgid ""
"Note that ``.pth`` files (without leading underscore) will be processed "
"normally by the :mod:`site` module when ``import site`` has been specified."
msgstr ""
"Зауважте, що файли ``.pth`` (без підкреслення на початку) будуть нормально "
"оброблені модулем :mod:`site`, якщо ``імпортувати сайт`` було вказано."

msgid "Embedded Python"
msgstr "Вбудований Python"

msgid ""
"If Python is embedded within another application :c:func:"
"`Py_InitializeFromConfig` and the :c:type:`PyConfig` structure can be used "
"to initialize Python. The path specific details are described at :ref:`init-"
"path-config`. Alternatively the older :c:func:`Py_SetPath` can be used to "
"bypass the initialization of the module search path."
msgstr ""
"Якщо Python вбудовано в іншу програму, :c:func:`Py_InitializeFromConfig` і "
"структуру :c:type:`PyConfig` можна використовувати для ініціалізації Python. "
"Деталі шляху описані в :ref:`init-path-config`. Як альтернатива, старіший :c:"
"func:`Py_SetPath` можна використовувати для обходу ініціалізації шляху "
"пошуку модуля."

msgid ":ref:`windows_finding_modules` for detailed Windows notes."
msgstr ":ref:`windows_finding_modules` для детальних приміток Windows."

msgid ":ref:`using-on-unix` for Unix details."
msgstr ":ref:`using-on-unix` для деталей Unix."
